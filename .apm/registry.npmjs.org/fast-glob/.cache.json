{"_id":"fast-glob","_rev":"2-074d4b5293953c04f714a3ed974e15fc","name":"fast-glob","description":"Is a faster `node-glob` alternative","dist-tags":{"latest":"1.0.1"},"versions":{"1.0.0":{"name":"fast-glob","version":"1.0.0","description":"Is a faster `node-glob` alternative","license":"MIT","repository":{"type":"git","url":"git+https://github.com/mrmlnc/fast-glob.git"},"author":{"name":"Denis Malinochkin","url":"canonium.com"},"engines":{"node":">=4.0.0"},"typings":"out/fglob.d.ts","keywords":["glob","patterns","fast","implementation"],"devDependencies":{"@types/micromatch":"^2.3.29","@types/mocha":"^2.2.34","@types/node":"^6.0.52","@types/rimraf":"0.0.28","fs-extra":"^1.0.0","glob":"^7.1.1","mocha":"^3.2.0","rimraf":"^2.5.4","tslint":"^4.2.0","tslint-config-xo":"^1.0.0","typescript":"^2.1.4"},"dependencies":{"bash-glob":"^0.1.1","glob-parent":"^3.1.0","micromatch":"^2.3.11","readdir-enhanced":"^1.4.5"},"scripts":{"clean":"rimraf out","lint":"tslint src/**/*.ts","compile":"tsc","test":"rimraf .tmp && mocha out/{,**/}*.spec.js -s 0","build":"npm run clean && npm run lint && npm run compile && npm test","watch":"npm run clean && npm run lint && npm run compile -- --sourceMap --watch","bench":"npm run clean && npm run lint && npm run compile && bash benchmark/benchmark.sh"},"bugs":{"url":"https://github.com/mrmlnc/fast-glob/issues"},"homepage":"https://github.com/mrmlnc/fast-glob#readme","_id":"fast-glob@1.0.0","_shasum":"944c8c21279d7b0144d2f4df0c946dcecaacffe5","_from":".","_npmVersion":"3.10.10","_nodeVersion":"7.3.0","_npmUser":{"name":"mrmlnc","email":"dmalinochkin@rambler.ru"},"dist":{"shasum":"944c8c21279d7b0144d2f4df0c946dcecaacffe5","tarball":"https://registry.npmjs.org/fast-glob/-/fast-glob-1.0.0.tgz"},"maintainers":[{"name":"mrmlnc","email":"dmalinochkin@rambler.ru"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/fast-glob-1.0.0.tgz_1482922143891_0.25564247369766235"},"directories":{}},"1.0.1":{"name":"fast-glob","version":"1.0.1","description":"Is a faster `node-glob` alternative","license":"MIT","repository":{"type":"git","url":"git+https://github.com/mrmlnc/fast-glob.git"},"author":{"name":"Denis Malinochkin","url":"canonium.com"},"engines":{"node":">=4.0.0"},"typings":"out/fglob.d.ts","keywords":["glob","patterns","fast","implementation"],"devDependencies":{"@types/micromatch":"^2.3.29","@types/mocha":"^2.2.41","@types/node":"^7.0.27","@types/rimraf":"0.0.28","fs-extra":"^3.0.1","glob":"^7.1.2","mocha":"^3.4.2","rimraf":"^2.6.1","tslint":"^5.4.2","tslint-config-xo":"^1.2.0","typescript":"^2.3.4"},"dependencies":{"bash-glob":"^1.0.1","glob-parent":"^3.1.0","micromatch":"^3.0.3","readdir-enhanced":"^1.5.2"},"scripts":{"clean":"rimraf out","lint":"tslint src/**/*.ts","compile":"tsc","test":"rimraf .tmp && mocha out/{,**/}*.spec.js -s 0","build":"npm run clean && npm run lint && npm run compile && npm test","watch":"npm run clean && npm run lint && npm run compile -- --sourceMap --watch","bench":"npm run clean && npm run lint && npm run compile && bash benchmark/benchmark.sh"},"gitHead":"cdce6ac564a2c08d3347eedf145e975318914ebe","bugs":{"url":"https://github.com/mrmlnc/fast-glob/issues"},"homepage":"https://github.com/mrmlnc/fast-glob#readme","_id":"fast-glob@1.0.1","_npmVersion":"5.0.2","_nodeVersion":"8.0.0","_npmUser":{"name":"mrmlnc","email":"dmalinochkin@rambler.ru"},"dist":{"integrity":"sha512-C2VHbdBwSkaQDyavjQZDflZzmZKrsUK3fTdJtsOnED0L0vtHCw+NL0h8pRcydbpRHlNJLZ4/LbOfEdJKspK91A==","shasum":"30f9b1120fd57a7f172364a6458fbdbd98187b3c","tarball":"https://registry.npmjs.org/fast-glob/-/fast-glob-1.0.1.tgz"},"maintainers":[{"name":"mrmlnc","email":"dmalinochkin@rambler.ru"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/fast-glob-1.0.1.tgz_1496479244042_0.014894188614562154"},"directories":{}}},"readme":"# fast-glob\n\n> Is a faster (1.5-8x for most cases) `node-glob` alternative.\n\n## Install\n\n```\n$ npm i -S fast-glob\n```\n\n## Why?\n\n  * Fast by using Streams, Promises and Bash Globbing on Linux machines. Used [readdir-enhanced](https://github.com/BigstickCarpet/readdir-enhanced), [micromatch](https://github.com/jonschlinkert/micromatch) and [bash-glob](https://github.com/jonschlinkert/bash-glob).\n  * You can limit the depth of your search (only for non-Bash mode).\n  * You can get not only file paths, but also their `fs.Stats` objects with the additional `path` property.\n  * You can transform file path or `fs.Stats` object before sending it to an array.\n\n## Usage\n\n```js\nconst fastGlob = require('fast-glob');\n\n// Async\nfastGlob('dir/**/*.txt').then((files) => {\n  console.log(files); // ['dir/a.txt', ...]\n});\n\n// Sync\nconst files = fastGlob.sync('dir/**/*.txt');\nconsole.log(files); // ['dir/a.txt', ...]\n```\n\n## API\n\n### fastGlob(patterns, [options])\n\n  * patterns `String|String[]` Patterns to be matched\n  * options `Object`\n  * return `String[]` or `fs.Stats[]` with `path` property\n\n### fastGlob.sync(patterns, [options]) => []\n\n  * patterns `String|String[]` Patterns to be matched\n  * options `Object`\n  * return `String[]` or `fs.Stats[]` with `path` property\n\n## options\n\n| Option      | Type              | Default                | Description |\n|:------------:|:-----------------:|:---------------------:|:------------|\n| `cwd`        | `String`          | `process.cwd`         | The current working directory in which to search |\n| `deep`       | `Number|Boolean`  | `true`                | The deep option can be set to true to traverse the entire directory structure, or it can be set to a number to only traverse that many levels deep. |\n| `ignore`     | `String|String[]` | `[]`                  | Add a pattern or an array of glob patterns to exclude matches. |\n| `stats`      | `Boolean`         | `false`               | Return `fs.Stats` with `path` property instead of file path. |\n| `onlyFiles`  | `Boolean`         | `false`               | Return only files. |\n| `onlyDirs`   | `Boolean`         | `false`               | Return only directories. |\n| `bashNative` | `String[]`        | `['darwin', 'linux']` | Use bash-powered globbing (2-15x faster on Linux, but slow on BashOnWindows) for specified platforms. See [available values for array](https://nodejs.org/dist/latest-v7.x/docs/api/process.html#process_process_platform). |\n| `transform`  | `Function`        | `null`                | Allows you to transform a path or `fs.Stats` object before sending to the array. |\n\n## Compatible with `node-glob`?\n\nNot fully, because `fast-glob` not implements all options of `node-glob`.\n\n## Example for `transform` option\n\n```js\nfastGlob('dir/**/*.txt', { transform: readFilePromise }).then((files) => {\n  console.log(files); // ['dir/a.txt', ...]\n  return Promise.all(files);\n}).then((files) => {\n  console.log(files); // ['content from dir/a.txt', ...]\n});\n```\n\n## Benchmark\n\n**Tech specs:**\n\n * Intel Core i7-3610QM\n * RAM 8GB\n * SSD (555MB/S, 530MB/S)\n * Windows 10 + VirtualBox with Manjaro\n * Node.js v7.3.0\n\n```shell\n$ npm run bench\n\n==============================\nBenchmark for 10 files\n==============================\n\nbash: 6 ms\nnode-glob (10): 19.47606 ms\nbash-glob (10): 23.406374 ms\nfast-glob (10) as native: 25.359293 ms\nfast-glob (10) as fast: 33.696387 ms\n\n==============================\nBenchmark for 50 files\n==============================\n\nbash: 6 ms\nnode-glob (54): 28.43855 ms\nbash-glob (54): 20.731202 ms\nfast-glob (54) as native: 22.709236 ms\nfast-glob (54) as fast: 25.057461 ms\n\n==============================\nBenchmark for 100 files\n==============================\n\nbash: 5 ms\nnode-glob (109): 34.811618 ms\nbash-glob (109): 21.624256 ms\nfast-glob (109) as native: 26.291311 ms\nfast-glob (109) as fast: 29.61791 ms\n\n==============================\nBenchmark for 500 files\n==============================\n\nbash: 7 ms\nnode-glob (549): 90.513766 ms\nbash-glob (549): 23.116938 ms\nfast-glob (549) as native: 30.978642 ms\nfast-glob (549) as fast: 61.367613 ms\n\n==============================\nBenchmark for 1000 files\n==============================\n\nbash: 11 ms\nnode-glob (1099): 139.44816 ms\nbash-glob (1099): 35.691985 ms\nfast-glob (1099) as native: 36.770455 ms\nfast-glob (1099) as fast: 84.387065 ms\n\n==============================\nBenchmark for 5000 files\n==============================\n\nbash: 43 ms\nnode-glob (5499): 584.910373 ms\nbash-glob (5499): 90.38803 ms\nfast-glob (5499) as native: 97.143759 ms\nfast-glob (5499) as fast: 233.977073 ms\n\n==============================\nBenchmark for 10000 files\n==============================\n\nbash: 96 ms\nnode-glob (10999): 1143.377267 ms\nbash-glob (10999): 169.416486 ms\nfast-glob (10999) as native: 198.930152 ms\nfast-glob (10999) as fast: 531.693878 ms\n```\n\n## Changelog\n\nSee the [Releases section of our GitHub project](https://github.com/mrmlnc/fast-glob/releases) for changelogs for each release version.\n\n## License\n\nThis software is released under the terms of the MIT license.\n","maintainers":[{"name":"mrmlnc","email":"dmalinochkin@rambler.ru"}],"time":{"modified":"2017-06-03T08:40:45.008Z","created":"2016-12-28T10:49:04.653Z","1.0.0":"2016-12-28T10:49:04.653Z","1.0.1":"2017-06-03T08:40:45.008Z"},"homepage":"https://github.com/mrmlnc/fast-glob#readme","keywords":["glob","patterns","fast","implementation"],"repository":{"type":"git","url":"git+https://github.com/mrmlnc/fast-glob.git"},"author":{"name":"Denis Malinochkin","url":"canonium.com"},"bugs":{"url":"https://github.com/mrmlnc/fast-glob/issues"},"license":"MIT","readmeFilename":"README.md","_attachments":{},"_etag":"W/\"5932760d-25d2\"","_lastModified":"Sat, 03 Jun 2017 08:40:45 GMT"}