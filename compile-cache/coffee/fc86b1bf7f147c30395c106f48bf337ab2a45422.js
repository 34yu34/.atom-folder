(function() {
  var defaultPrecompiled;

  module.exports = defaultPrecompiled = {
    c: ["assert.h", "complex.h", "ctype.h", "errno.h", "fenv.h", "float.h", "inttypes.h", "iso646.h", "limits.h", "locale.h", "math.h", "setjmp.h", "signal.h", "stdalign.h", "stdarg.h", "stdatomic.h", "stdbool.h", "stddef.h", "stdint.h", "stdio.h", "stdlib.h", "stdnoreturn.h", "string.h", "tgmath.h", "threads.h", "time.h", "uchar.h", "wchar.h", "wctype.h"],
    cpp: ["cassert", "cctype", "cerrno", "cfloat", "ciso646", "climits", "clocale", "cmath", "csetjmp", "csignal", "cstdarg", "cstddef", "cstdio", "cstdlib", "cstring", "ctime", "cwchar", "cwctype", "deque", "list", "map", "queue", "set", "stack", "vector", "fstream", "iomanip", "ios", "iosfwd", "iostream", "istream", "ostream", "sstream", "streambuf", "algorithm", "bitset", "complex", "exception", "functional", "iterator", "limits", "locale", "memory", "new", "numeric", "stdexcept", "string", "typeinfo", "utility", "valarray"],
    objc: [],
    objcpp: []
  };

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiL2hvbWUvYmlsbHkvLmF0b20vcGFja2FnZXMvYXV0b2NvbXBsZXRlLWNsYW5nL2xpYi9kZWZhdWx0UHJlY29tcGlsZWQuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUEsTUFBQTs7RUFBQSxNQUFNLENBQUMsT0FBUCxHQUNFLGtCQUFBLEdBQ0U7SUFBQSxDQUFBLEVBQUcsQ0FDRCxVQURDLEVBRUQsV0FGQyxFQUdELFNBSEMsRUFJRCxTQUpDLEVBS0QsUUFMQyxFQU1ELFNBTkMsRUFPRCxZQVBDLEVBUUQsVUFSQyxFQVNELFVBVEMsRUFVRCxVQVZDLEVBV0QsUUFYQyxFQVlELFVBWkMsRUFhRCxVQWJDLEVBY0QsWUFkQyxFQWVELFVBZkMsRUFnQkQsYUFoQkMsRUFpQkQsV0FqQkMsRUFrQkQsVUFsQkMsRUFtQkQsVUFuQkMsRUFvQkQsU0FwQkMsRUFxQkQsVUFyQkMsRUFzQkQsZUF0QkMsRUF1QkQsVUF2QkMsRUF3QkQsVUF4QkMsRUF5QkQsV0F6QkMsRUEwQkQsUUExQkMsRUEyQkQsU0EzQkMsRUE0QkQsU0E1QkMsRUE2QkQsVUE3QkMsQ0FBSDtJQStCQSxHQUFBLEVBQUssQ0FDRCxTQURDLEVBRUQsUUFGQyxFQUdELFFBSEMsRUFJRCxRQUpDLEVBS0QsU0FMQyxFQU1ELFNBTkMsRUFPRCxTQVBDLEVBUUQsT0FSQyxFQVNELFNBVEMsRUFVRCxTQVZDLEVBV0QsU0FYQyxFQVlELFNBWkMsRUFhRCxRQWJDLEVBY0QsU0FkQyxFQWVELFNBZkMsRUFnQkQsT0FoQkMsRUFpQkQsUUFqQkMsRUFrQkQsU0FsQkMsRUFtQkQsT0FuQkMsRUFvQkQsTUFwQkMsRUFxQkQsS0FyQkMsRUFzQkQsT0F0QkMsRUF1QkQsS0F2QkMsRUF3QkQsT0F4QkMsRUF5QkQsUUF6QkMsRUEwQkQsU0ExQkMsRUEyQkQsU0EzQkMsRUE0QkQsS0E1QkMsRUE2QkQsUUE3QkMsRUE4QkQsVUE5QkMsRUErQkQsU0EvQkMsRUFnQ0QsU0FoQ0MsRUFpQ0QsU0FqQ0MsRUFrQ0QsV0FsQ0MsRUFtQ0QsV0FuQ0MsRUFvQ0QsUUFwQ0MsRUFxQ0QsU0FyQ0MsRUFzQ0QsV0F0Q0MsRUF1Q0QsWUF2Q0MsRUF3Q0QsVUF4Q0MsRUF5Q0QsUUF6Q0MsRUEwQ0QsUUExQ0MsRUEyQ0QsUUEzQ0MsRUE0Q0QsS0E1Q0MsRUE2Q0QsU0E3Q0MsRUE4Q0QsV0E5Q0MsRUErQ0QsUUEvQ0MsRUFnREQsVUFoREMsRUFpREQsU0FqREMsRUFrREQsVUFsREMsQ0EvQkw7SUFtRkEsSUFBQSxFQUFLLEVBbkZMO0lBb0ZBLE1BQUEsRUFBTyxFQXBGUDs7QUFGSiIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID1cbiAgZGVmYXVsdFByZWNvbXBpbGVkID1cbiAgICBjOiBbXG4gICAgICBcImFzc2VydC5oXCIsXG4gICAgICBcImNvbXBsZXguaFwiLFxuICAgICAgXCJjdHlwZS5oXCIsXG4gICAgICBcImVycm5vLmhcIixcbiAgICAgIFwiZmVudi5oXCIsXG4gICAgICBcImZsb2F0LmhcIixcbiAgICAgIFwiaW50dHlwZXMuaFwiLFxuICAgICAgXCJpc282NDYuaFwiLFxuICAgICAgXCJsaW1pdHMuaFwiLFxuICAgICAgXCJsb2NhbGUuaFwiLFxuICAgICAgXCJtYXRoLmhcIixcbiAgICAgIFwic2V0am1wLmhcIixcbiAgICAgIFwic2lnbmFsLmhcIixcbiAgICAgIFwic3RkYWxpZ24uaFwiLFxuICAgICAgXCJzdGRhcmcuaFwiLFxuICAgICAgXCJzdGRhdG9taWMuaFwiLFxuICAgICAgXCJzdGRib29sLmhcIixcbiAgICAgIFwic3RkZGVmLmhcIixcbiAgICAgIFwic3RkaW50LmhcIixcbiAgICAgIFwic3RkaW8uaFwiLFxuICAgICAgXCJzdGRsaWIuaFwiLFxuICAgICAgXCJzdGRub3JldHVybi5oXCIsXG4gICAgICBcInN0cmluZy5oXCIsXG4gICAgICBcInRnbWF0aC5oXCIsXG4gICAgICBcInRocmVhZHMuaFwiLFxuICAgICAgXCJ0aW1lLmhcIixcbiAgICAgIFwidWNoYXIuaFwiLFxuICAgICAgXCJ3Y2hhci5oXCIsXG4gICAgICBcIndjdHlwZS5oXCIsXG4gICAgICBdXG4gICAgY3BwOiBbXG4gICAgICAgIFwiY2Fzc2VydFwiLFxuICAgICAgICBcImNjdHlwZVwiLFxuICAgICAgICBcImNlcnJub1wiLFxuICAgICAgICBcImNmbG9hdFwiLFxuICAgICAgICBcImNpc282NDZcIixcbiAgICAgICAgXCJjbGltaXRzXCIsXG4gICAgICAgIFwiY2xvY2FsZVwiLFxuICAgICAgICBcImNtYXRoXCIsXG4gICAgICAgIFwiY3NldGptcFwiLFxuICAgICAgICBcImNzaWduYWxcIixcbiAgICAgICAgXCJjc3RkYXJnXCIsXG4gICAgICAgIFwiY3N0ZGRlZlwiLFxuICAgICAgICBcImNzdGRpb1wiLFxuICAgICAgICBcImNzdGRsaWJcIixcbiAgICAgICAgXCJjc3RyaW5nXCIsXG4gICAgICAgIFwiY3RpbWVcIixcbiAgICAgICAgXCJjd2NoYXJcIixcbiAgICAgICAgXCJjd2N0eXBlXCIsXG4gICAgICAgIFwiZGVxdWVcIixcbiAgICAgICAgXCJsaXN0XCIsXG4gICAgICAgIFwibWFwXCIsXG4gICAgICAgIFwicXVldWVcIixcbiAgICAgICAgXCJzZXRcIixcbiAgICAgICAgXCJzdGFja1wiLFxuICAgICAgICBcInZlY3RvclwiLFxuICAgICAgICBcImZzdHJlYW1cIixcbiAgICAgICAgXCJpb21hbmlwXCIsXG4gICAgICAgIFwiaW9zXCIsXG4gICAgICAgIFwiaW9zZndkXCIsXG4gICAgICAgIFwiaW9zdHJlYW1cIixcbiAgICAgICAgXCJpc3RyZWFtXCIsXG4gICAgICAgIFwib3N0cmVhbVwiLFxuICAgICAgICBcInNzdHJlYW1cIixcbiAgICAgICAgXCJzdHJlYW1idWZcIixcbiAgICAgICAgXCJhbGdvcml0aG1cIixcbiAgICAgICAgXCJiaXRzZXRcIixcbiAgICAgICAgXCJjb21wbGV4XCIsXG4gICAgICAgIFwiZXhjZXB0aW9uXCIsXG4gICAgICAgIFwiZnVuY3Rpb25hbFwiLFxuICAgICAgICBcIml0ZXJhdG9yXCIsXG4gICAgICAgIFwibGltaXRzXCIsXG4gICAgICAgIFwibG9jYWxlXCIsXG4gICAgICAgIFwibWVtb3J5XCIsXG4gICAgICAgIFwibmV3XCIsXG4gICAgICAgIFwibnVtZXJpY1wiLFxuICAgICAgICBcInN0ZGV4Y2VwdFwiLFxuICAgICAgICBcInN0cmluZ1wiLFxuICAgICAgICBcInR5cGVpbmZvXCIsXG4gICAgICAgIFwidXRpbGl0eVwiLFxuICAgICAgICBcInZhbGFycmF5XCIsXG4gICAgICBdXG4gICAgb2JqYzpbXVxuICAgIG9iamNwcDpbXVxuIl19
